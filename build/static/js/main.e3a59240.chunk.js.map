{"version":3,"sources":["components/ShowEntry.js","components/Persons.js","components/PersonsForm.js","components/Filter.js","communication/phonebook.js","components/Notification.js","App.js","index.js"],"names":["ShowEntry","entry","id","handleDelete","name","number","onClick","Persons","phonebook","map","PersonsForm","props","onSubmit","addInformation","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Filter","newFilter","handleFilterChange","baseUrl","phonebookEntries","getAll","axios","get","then","response","data","create","newObject","post","deleteEntry","delete","update","updatedObject","put","Notification","message","className","App","useState","setPhonebookEntries","setNewName","setNewNumber","setFilter","errorMessage","setErrorMessage","errorType","setErrorType","filteredEntries","filter","toLowerCase","includes","useEffect","phonebookService","phonebookFromServer","errorMessagePopup","setTimeout","changeNumber","result","window","confirm","returnedEntry","catch","error","event","target","preventDefault","find","undefined","phonebookObject","nanoid","concat","ReactDOM","render","document","getElementById"],"mappings":"6KAaeA,EAXG,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,aAC9B,OACE,8BACA,+BAAcF,EAAMG,KAApB,IAA2BH,EAAMI,OACjC,wBAAQC,QAAU,kBAAMH,EAAaF,EAAMC,GAAID,EAAMG,OAArD,sBADSF,MCSEK,EAXC,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWL,EAAmB,EAAnBA,aAC1B,OACA,8BACA,6BACCK,EAAUC,KAAI,SAAAR,GAAK,OAChB,cAAC,EAAD,CAAWA,MAAOA,EAAsBE,aAAcA,GAAxBF,EAAMC,YCS7BQ,EAdK,SAACC,GACjB,OACI,8BACI,uBAAMC,SAAUD,EAAME,eAAtB,UACA,0CAAY,uBAAOC,MAAOH,EAAMI,QAASC,SAAUL,EAAMM,sBACzD,4CAAc,uBAAOH,MAAOH,EAAMO,UAAWF,SAAUL,EAAMQ,qBAA7D,OACA,wBAAQC,KAAK,SAAb,uBCGGC,EARA,SAACV,GACZ,OAEE,sDAAwB,uBAAOG,MAAOH,EAAMW,UAAWN,SAAUL,EAAMY,yB,wBCNvEC,EAAU,eAyBDC,EADU,CAAGC,OArBb,WAEX,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAmBTC,OAhBrB,SAAAC,GAEX,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAcDI,YAXxB,SAACjC,GAEjB,OADgByB,IAAMS,OAAN,UAAgBZ,EAAhB,YAA2BtB,IAC5B2B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SASYM,OAN1C,SAACnC,EAAIoC,GAEhB,OADgBX,IAAMY,IAAN,UAAaf,EAAb,YAAwBtB,GAAMoC,GAC/BT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCA9BS,EAnBM,SAAC7B,GAClB,OAAqB,OAAlBA,EAAM8B,QACE,MAEa,IAAf9B,EAAMS,KAEX,qBAAKsB,UAAU,QAAf,SACK/B,EAAM8B,UAKf,qBAAKC,UAAU,YAAf,SACK/B,EAAM8B,WC4FAE,EAnGH,WAAO,IAAD,EACgCC,mBAAS,IADzC,mBACTnB,EADS,KACSoB,EADT,OAEcD,mBAAS,IAFvB,mBAET7B,EAFS,KAEA+B,EAFA,OAGkBF,mBAAS,IAH3B,mBAGT1B,EAHS,KAGE6B,EAHF,OAIeH,mBAAS,IAJxB,mBAITtB,EAJS,KAIE0B,EAJF,OAKwBJ,mBAAS,MALjC,mBAKTK,EALS,KAKKC,EALL,OAMkBN,mBAAS,GAN3B,mBAMTO,EANS,KAMEC,EANF,KAOVC,EAAkB5B,EAAiB6B,QAAO,SAAArD,GAAK,OAAIA,EAAMG,KAAKmD,cAAcC,SAASlC,EAAUiC,kBAErGE,qBAAU,WACRC,EACGhC,SACAG,MAAK,SAAA8B,GACJd,EAAoBc,QAExB,IAEF,IA2CMC,EAAoB,SAACnB,EAASrB,GAChC8B,EAAgBT,GAChBW,EAAahC,GACbyC,YAAW,WACTX,EAAgB,MAChBE,EAAa,QAAQ,MAGrBU,EAAe,SAACC,GAChBC,OAAOC,QAAQlD,EAAU,4EAC3BgD,EAAO1D,OAASa,EAChBwC,EACGrB,OAAO0B,EAAO7D,GAAI6D,GAClBlC,MAAK,SAAAqC,GACNN,EAAkB,WAAD,OAAY7C,IAAW,GACxC8B,EAAoBpB,EAAiBhB,KAAI,SAAAR,GAAK,OAAIA,EAAMC,KAAOgE,EAAchE,GAAKgE,EAAgBjE,SAEjGkE,OAAM,SAAAC,GAAK,OAAIR,EAAkB,kBAAD,OAAmB7C,EAAnB,8CAAuE,QAG9G,OACE,gCACE,2CACA,cAAC,EAAD,CAAc0B,QAASQ,EAAc7B,KAAM+B,IAC3C,cAAC,EAAD,CAAQrC,MAAOQ,EAAWC,mBApCH,SAAC8C,GAC1BrB,EAAUqB,EAAMC,OAAOxD,UAoCrB,2CACA,cAAC,EAAD,CACAC,QAASA,EACTG,UAAWA,EACXD,iBA/CqB,SAACoD,GACxBvB,EAAWuB,EAAMC,OAAOxD,QA+CtBK,mBA7CuB,SAACkD,GAC1BtB,EAAasB,EAAMC,OAAOxD,QA6CxBD,eA1EmB,SAACwD,GACtBA,EAAME,iBACN,IAAMR,EAAStC,EAAiB+C,MAAK,SAAAvE,GAAK,OAAIA,EAAMG,OAASW,KAC3D,QAAc0D,IAATV,EAAL,CAKF,IAAMW,EAAkB,CACtBtE,KAAMW,EACNV,OAAQa,EACRhB,GAAIyE,eAGNjB,EACG1B,OAAO0C,GACP7C,MAAK,SAAAqC,GACJN,EAAkB,SAAD,OAAU7C,IAAW,GACtC8B,EAAoBpB,EAAiBmD,OAAOV,IAC5CnB,EAAa,IACbD,EAAW,YAhBXgB,EAAaC,MAwEf,yCACA,cAAC,EAAD,CAASvD,UAAW6C,EAAiBlD,aA3CpB,SAACD,EAAIE,GACT4D,OAAOC,QAAP,iBAAyB7D,EAAzB,QAEbsD,EACCvB,YAAYjC,GACb2C,EAAoBpB,EAAiB6B,QAAO,SAAArD,GAAK,OAAIC,IAAOD,EAAMC,e,MC3DxE2E,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e3a59240.chunk.js","sourcesContent":["import React from 'react'\n\nconst ShowEntry = ({ entry, id, handleDelete}) => {\n  return (\n    <div>\n    <li key={id}>{entry.name} {entry.number}\n    <button onClick={ () => handleDelete(entry.id, entry.name) }>\n    delete\n    </button></li>\n    </div>\n  )\n}\n\nexport default ShowEntry","import React from 'react'\nimport ShowEntry from './ShowEntry'\n\nconst Persons = ({ phonebook, handleDelete }) => {\n    return (\n    <div>\n    <ul>\n    {phonebook.map(entry => \n        <ShowEntry entry={entry} key={entry.id} handleDelete={handleDelete} />\n        )}\n    </ul>\n    </div> )\n}\n\nexport default Persons","import React from 'react'\n\n\nconst PersonsForm = (props) => {\n    return(\n        <div>\n            <form onSubmit={props.addInformation}>\n            <div> name: <input value={props.newName} onChange={props.handleNameChange}/></div>\n            <div> number: <input value={props.newNumber} onChange={props.handleNumberChange}/> </div>\n            <button type=\"submit\">add</button>\n            </form>\n        </div>\n    )\n}\n\n\n\nexport default PersonsForm","import React from 'react'\n\n  \n\nconst Filter = (props) => {\n    return(\n\n      <div> filter shown with <input value={props.newFilter} onChange={props.handleFilterChange}/></div>\n    )\n}\n\n\nexport default Filter","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\n\nconst getAll = () =>{\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst deleteEntry = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, updatedObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, updatedObject)\n    return request.then(response => response.data)\n}\n\n\nconst phonebookEntries = {  getAll, create, deleteEntry, update}\nexport default phonebookEntries","import React from 'react'\n\nconst Notification = (props) => {\n    if(props.message === null) {\n        return null\n    }\n    else if (props.type === false) {\n        return(\n        <div className=\"error\">\n            {props.message}\n        </div>)\n    }\n    \n    return (\n    <div className=\"FourError\"> \n        {props.message} \n    </div>)\n}\n\n\n\nexport default Notification","import React, { useState, useEffect }  from 'react'\nimport Persons from './components/Persons'\nimport PersonsForm from './components/PersonsForm'\nimport Filter from './components/Filter'\nimport { nanoid } from 'nanoid'\nimport phonebookService from './communication/phonebook'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [phonebookEntries, setPhonebookEntries] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [errorType, setErrorType] = useState(0)\n  const filteredEntries = phonebookEntries.filter(entry => entry.name.toLowerCase().includes(newFilter.toLowerCase()))\n  \n  useEffect(() => {\n    phonebookService\n      .getAll()\n      .then(phonebookFromServer => {\n        setPhonebookEntries(phonebookFromServer)\n      })\n  },[])\n\n  const addInformation = (event) => {\n    event.preventDefault()\n    const result = phonebookEntries.find(entry => entry.name === newName)\n      if(!(result===undefined))  {\n        changeNumber(result)\n        return\n      }\n\n    const phonebookObject = {\n      name: newName,\n      number: newNumber,\n      id: nanoid()\n    }\n\n    phonebookService\n      .create(phonebookObject)\n      .then(returnedEntry => {\n        errorMessagePopup(`Added ${newName}`, false)\n        setPhonebookEntries(phonebookEntries.concat(returnedEntry))\n        setNewNumber('')\n        setNewName('')\n\n      })\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n  const handleDelete = (id, name) => {\n    const result = window.confirm(`Delete ${name}?`)\n    if (result) {\n      phonebookService\n      .deleteEntry(id)\n      setPhonebookEntries(phonebookEntries.filter(entry => id !== entry.id))\n    }\n  }\n\n  const errorMessagePopup = (message, type) => {\n      setErrorMessage(message)\n      setErrorType(type)\n      setTimeout(() => {\n        setErrorMessage(null)\n        setErrorType(null)}, 2000)\n  }\n\n  const changeNumber = (result) => {\n    if (window.confirm(newName + ' is already added to phonebook, replace the old number with a new one?')) {\n      result.number = newNumber;\n      phonebookService\n        .update(result.id, result)\n        .then(returnedEntry => {\n        errorMessagePopup(`Changed ${newName}`, false)\n        setPhonebookEntries(phonebookEntries.map(entry => entry.id === returnedEntry.id ? returnedEntry : entry));\n        })\n        .catch(error => errorMessagePopup(`Information of ${newName} has already been removed from the server`, true))\n    }\n  };\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={errorMessage} type={errorType}/>\n      <Filter value={newFilter} handleFilterChange={handleFilterChange} />      \n      <h1>add a new</h1>\n      <PersonsForm \n      newName={newName} \n      newNumber={newNumber} \n      handleNameChange={handleNameChange} \n      handleNumberChange={handleNumberChange}\n      addInformation={addInformation}\n      />\n      <h1>Numbers</h1>\n      <Persons phonebook={filteredEntries} handleDelete={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\n\nReactDOM.render(\n  <App  />,\n  document.getElementById('root')\n)"],"sourceRoot":""}